swagger: "2.0"
info:
  description: This is the swagger specs for this flask-api project
  version: "1.0.0"
  title: Flask Api
consumes:
  - application/json
produces:
  - application/json

#basePath: /

# Paths supported by this application
paths:
  /createdb:
    get:
      operationId: api.main.create_db
      tags:
      - db-helper
      summary: Creates a database per config settings
      description: Creates a database per config settings
      responses:
        200:
          description: Creates a database per config settings

  /:
    get:
      operationId: api.main.welcome
      tags:
        - home
      summary: Retrieves welcome message
      description: Displays welcome message
      responses:
        200:
          description: See a welcome message

  /health:
    get:
      operationId: api.main.health
      tags:
        - health
      summary: Retrieves health status of this application
      description: Perform health check on flask api
      responses:
        200:
          description: Application is functioning normally

  /users/v1:
    get:
      operationId: api.users.get_users
      tags:
        - users
      summary: Retrieves all users
      description: Displays all users
      responses:
        200:
          description: See all users
    post:
      operationId: api.users.add_user
      tags:
        - users
      summary: Creates user
      description: Creates a single user record
      parameters:
        - name: user
          in: body
          description: username to create
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
      responses:
        200:
          description: Sucessfully create user
        400:
          description: Invalid request

  /users/v1/{username}:
    get:
      operationId: api.users.get_by_username
      tags:
        - users
      summary: Retrieves user by username
      description: Displays user by username
      parameters:
        - name: username
          in: path
          description: retrieve username data
          type: string
          required: true
      responses:
        200:
          description: Successfully display user info
          schema:
            type: array
            items:
              properties:
                username:
                  type: string
                email:
                  type: string
        404:
          description: User not found

    put:
      operationId: api.users.update_email
      tags:
        - users
      summary: Update user email
      description: Update a single user email
      parameters:
        - name: username
          in: path
          description: username to update email
          type: string
          required: true
        - name: user
          in: body
          description: field to update
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        204:
          description: Sucessfully updated user email
        400:
          description: Invalid request

    delete:
      operationId: api.users.delete_user
      tags:
        - users
      summary: Deletes user by username
      description: Deletes user by username
      parameters:
        - name: username
          in: path
          description: Delete username
          type: string
          required: true
      responses:
        204:
          description: Sucessfully deleted user
        404:
          description: User not found

  /locations/v1:
    get:
      operationId: api.locations.get_locations
      tags:
        - locations
      summary: Retrieves all locations
      description: Displays all locations
      responses:
        200:
          description: See all locations
    post:
      operationId: api.locations.add_location
      tags:
        - locations
      summary: Creates location
      description: Creates a single location record
      parameters:
        - name: location
          in: body
          description: location to create
          required: true
          schema:
            type: object
            properties:
              state:
                type: string
              capital:
                type: string
      responses:
        200:
          description: Sucessfully create location
        400:
          description: Invalid request

  /locations/v1/{state}:
    get:
      operationId: api.locations.get_by_state
      tags:
        - locations
      summary: Retrieves location by state
      description: Displays location by state
      parameters:
        - name: state
          in: path
          description: retrieve state data
          type: string
          required: true
      responses:
        200:
          description: Successfully display state info
          schema:
            type: array
            items:
              properties:
                state:
                  type: string
                capital:
                  type: string
        404:
          description: State not found

    put:
      operationId: api.locations.update_capital
      tags:
        - locations
      summary: Update location capital
      description: Update a single location
      parameters:
        - name: state
          in: path
          description: state to update
          type: string
          required: true
        - name: capital
          in: body
          description: field to update
          required: true
          schema:
            type: object
            properties:
              capital:
                type: string
      responses:
        204:
          description: Sucessfully updated location capital
        400:
          description: Invalid request

    delete:
      operationId: api.locations.delete_location
      tags:
        - locations
      summary: Deletes location by state
      description: Deletes location by state
      parameters:
        - name: state
          in: path
          description: Delete state
          type: string
          required: true
      responses:
        204:
          description: Sucessfully location
        404:
          description: Location not found